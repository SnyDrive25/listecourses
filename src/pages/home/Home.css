.card {
    position: relative;
    background-color: rgb(251, 252, 246, .1);
    height: fit-content;
    max-width: 750px;
    border-radius: 9px 9px 0 0;
    margin: 0 auto;
}

.big {
    margin-bottom: 4vw auto;
    height: auto;
    overflow-y: visible;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    border-radius: 0 0 9px 9px;
    gap: 17px;
}

#button,
.sync {
    margin-left: auto;
    margin-right: auto;
    margin: 15px auto;
    border-radius: 9px;
    padding: 9px;
}

#button {
    left: 0;
    width: 200px;
    background-color: var(--dark);
    color: var(--light);
    font-size: 1.7em;
    border: none;
}

.special {
    color: var(--main-plus);
    font-size: 1.4em;
    background-color: transparent;
    border: .1em solid var(--main-plus);
}

#input {
    width: calc(90vw + 32px);
    max-width: 782px !important;
    color: var(--light);
    font-size: 2em;
}

#button:hover,
.sync:hover {
    cursor: pointer;
}

#button:hover {
    background-color: var(--dark);
}

.sync:hover {
    background-color: rgb(207, 181, 61, .17);
}

.card p,
.card input {
    padding: 9px;
    border: .1em solid var(--dark);
    height: fit-content;
    color: var(--dark);
    font-size: 1.2em;
}

.card input {
    border-radius: 9px;
    padding-top: 1em;
    padding-bottom: 1em;
}

#new_element {
    float: left;
    text-transform: capitalize;
}

#quantite {
    float: right;
}

.card p {
    border-radius: 9px;
    position: relative;
    width: fit-content;
    padding-right: 3.5em;
    margin: 0;
}

.card p span {
    position: absolute;
    top: -.05em;
    background-color: var(--dark);
    border: .1em solid var(--dark);
    color: var(--light);
    border-radius: 0 9px 9px 0;
    right: 0em;
    width: 2em;
    padding: 9px;
}

.card p:hover {
    cursor: pointer;
    animation: tremble .07s infinite;
    animation-timing-function: linear;
    filter: brightness(2) sepia(20) hue-rotate(-50deg) saturate(7);
}

@keyframes tremble {
    0% {
        transform: rotateZ(0deg);
    }

    44% {
        transform: rotateZ(1deg) translateX(2px);
    }

    81% {
        transform: rotateZ(-1deg) translateX(-2px);
    }

    100% {
        transform: rotateZ(0deg);
    }
}

.separator {
    width: 90%;
    height: .2em;
    margin: 25px auto;
    margin-bottom: 10px;
    background-color: var(--main-plus);
    opacity: .33;
    border-radius: .2em;
}

.card input {
    width: calc(50% - 1.5em);
    margin: 0 auto;
}

input {
    opacity: 1 !important;
}

@media only screen and (min-width: 1200px) {

    .card {
        padding: 1em;
        width: 90vw;
    }

    .minion {
        position: fixed;
        bottom: 0;
        right: 0;
        height: 30vh;
        width: 44vh;
        background-image: url(../../images/minions.png);
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
    }

}

@media only screen and (max-width: 1200px) {

    .card {
        padding: .5em;
        width: 98vw;
    }

}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    appearance: textfield;
}